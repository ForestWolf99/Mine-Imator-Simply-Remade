<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <UseAppHost>true</UseAppHost>
    <ApplicationIcon>assets\appIcon01.ico</ApplicationIcon>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <SelfContained>true</SelfContained>
    <PublishSingleFile>true</PublishSingleFile>
    <PublishReadyToRun>true</PublishReadyToRun>
    <PublishTrimmed>false</PublishTrimmed>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ImGui.NET" Version="1.91.6.1" />
    <PackageReference Include="Silk.NET.Input" Version="2.22.0" />
    <PackageReference Include="Silk.NET.OpenGL" Version="2.22.0" />
    <PackageReference Include="Silk.NET.Vulkan" Version="2.22.0" />
    <PackageReference Include="Silk.NET.Windowing" Version="2.22.0" />
    <PackageReference Include="StbImageSharp" Version="2.30.15" />
    <PackageReference Include="Svg" Version="3.4.7" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="assets\**\*" />
  </ItemGroup>

  <ItemGroup>
    <TrimmableAssembly Include="Silk.NET.Windowing" Condition="false" />
    <TrimmableAssembly Include="Silk.NET.OpenGL" Condition="false" />
    <TrimmableAssembly Include="Silk.NET.Input" Condition="false" />
    <TrimmableAssembly Include="ImGui.NET" Condition="false" />
  </ItemGroup>

  <Target Name="CleanPublishFolder" BeforeTargets="Publish">
    <RemoveDir Directories="$(PublishDir)" />
  </Target>

  <!-- Windows-specific FFmpeg download and copy -->
  <Target Name="DownloadFFmpegWindows" BeforeTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Windows')) AND !Exists('$(MSBuildProjectDirectory)\..\ffmpeg.exe')">
    <Message Text="FFmpeg not found, downloading for Windows..." Importance="high" />
    <Exec Command="powershell -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\..\download-ffmpeg.ps1&quot;" 
          WorkingDirectory="$(MSBuildProjectDirectory)\.." />
  </Target>

  <Target Name="CopyFFmpegToOutputWindows" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Windows')) AND Exists('$(MSBuildProjectDirectory)\..\ffmpeg.exe')">
    <Message Text="Copying ffmpeg.exe to output directory..." Importance="high" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\..\ffmpeg.exe" 
          DestinationFolder="$(OutputPath)" 
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="CopyFFmpegToPublishWindows" AfterTargets="Publish" Condition="$([MSBuild]::IsOSPlatform('Windows')) AND Exists('$(MSBuildProjectDirectory)\..\ffmpeg.exe')">
    <Message Text="Copying ffmpeg.exe to publish directory..." Importance="high" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\..\ffmpeg.exe" 
          DestinationFolder="$(PublishDir)" 
          SkipUnchangedFiles="true" />
  </Target>

  <!-- Linux-specific FFmpeg download and copy -->
  <Target Name="DownloadFFmpegLinux" BeforeTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Linux')) AND !Exists('$(MSBuildProjectDirectory)/../ffmpeg')">
    <Message Text="FFmpeg not found, downloading for Linux..." Importance="high" />
    <Exec Command="bash &quot;$(MSBuildProjectDirectory)/../download-ffmpeg.sh&quot;" 
          WorkingDirectory="$(MSBuildProjectDirectory)/.." />
  </Target>

  <Target Name="CopyFFmpegToOutputLinux" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Linux')) AND Exists('$(MSBuildProjectDirectory)/../ffmpeg')">
    <Message Text="Copying ffmpeg to output directory..." Importance="high" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)/../ffmpeg" 
          DestinationFolder="$(OutputPath)" 
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="CopyFFmpegToPublishLinux" AfterTargets="Publish" Condition="$([MSBuild]::IsOSPlatform('Linux')) AND Exists('$(MSBuildProjectDirectory)/../ffmpeg')">
    <Message Text="Copying ffmpeg to publish directory..." Importance="high" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)/../ffmpeg" 
          DestinationFolder="$(PublishDir)" 
          SkipUnchangedFiles="true" />
  </Target>

</Project>
